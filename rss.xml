<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Ian Clare]]></title><description><![CDATA[I blog about stuff.]]></description><link>https://iclare.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 26 Feb 2020 13:15:49 GMT</lastBuildDate><item><title><![CDATA[WebAssembly]]></title><description><![CDATA[Intro to Web Assembly Run native code in the browser. WebAssembly WebAssembly is a low level language that runs with
near-native performance…]]></description><link>https://iclare.github.io/webassembly/</link><guid isPermaLink="false">https://iclare.github.io/webassembly/</guid><pubDate>Wed, 26 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Intro to Web Assembly&lt;/p&gt;
&lt;p&gt;Run native code in the browser.&lt;/p&gt;
&lt;h1&gt;WebAssembly&lt;/h1&gt;
&lt;p&gt;WebAssembly is a low level language that runs with
near-native performance. It is not intended to be written by hand,
and so provides a compilation target for languages like C/C++ and Rust.
This means these languages now have a way to run on the web.&lt;/p&gt;
&lt;h1&gt;So What?&lt;/h1&gt;
&lt;p&gt;The implications of WebAssembly are pretty big.
WebAssembly means you can run code written
in any number of languages, on the web, at near native speed.&lt;/p&gt;
&lt;p&gt;WebAssembly provides JavaScript APIs so you can load WebAssembly
modules into a JavaScript app. This means you can
replace parts of your code written in JavaScript with code
that targets WebAssembly, for massive performance gains.&lt;/p&gt;
&lt;p&gt;WebAssembly is being developed as a web standard via W3C and the community groups. WebAssembly 1.0 has already shipped in Firefox, Chrome, Safari, and Edge.&lt;/p&gt;
&lt;h1&gt;How does it work?&lt;/h1&gt;
&lt;p&gt;WebAssembly fits into a web platform that comes with web browsers.
In this web platform, there’s a virtual machine that runs web app code
(JavaScript), and there’s a set of APIs that can be called to control
the web platform; APIs like DOM, CSSOM, WebGL.&lt;/p&gt;
&lt;p&gt;In the past, the VM of web platforms has only been able to load JavaScript.
While JavaScript works well for most problems on the web, certain applications, like 3D games, VR, AR, image/video editing demand greater performance than an interpreted language can provide.&lt;/p&gt;
&lt;p&gt;Another issue is that browsers need to receive the full JavaScript source
of a web app in order to load it. This means large downloads, and on the fly
compilation that results in stuttering.&lt;/p&gt;
&lt;p&gt;The small binary and ahead of time compilation of a WebAssembly module
results in web apps that are much faster to download and run with better
performance.&lt;/p&gt;
&lt;h1&gt;How do I get started?&lt;/h1&gt;
&lt;p&gt;WebAssembly is still a young technology, so garbage collected languages
are not yet supported. Your best options are to either port a C/C++ application with Emscripten, Write a Rust application targeting WebAssembly as the output, or use AssemblyScript to write TypeScript style code that compiles to a WebAssembly binary. See the links below to get started with either of these options.&lt;/p&gt;
&lt;h1&gt;See also&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://webassembly.org/&quot;&gt;webassembly.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Concepts&quot;&gt;developer.mozilla.org/en-US/docs/WebAssembly/Concepts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://emscripten.org/docs/getting_started/index.html&quot;&gt;emscripten.org/docs/getting_started&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Rust_to_wasm&quot;&gt;developer.mozilla.org/en-US/docs/WebAssembly/Rust&lt;em&gt;to&lt;/em&gt;wasm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.assemblyscript.org/&quot;&gt;docs.assemblyscript.org&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Free Versus Open Source Software]]></title><description><![CDATA[This blog post is about my thoughts on an article by Benjamin Mako Hill.
When Free Software Isn’t Better Benjamin Mako Hill, a board…]]></description><link>https://iclare.github.io/free-versus-open-source-software/</link><guid isPermaLink="false">https://iclare.github.io/free-versus-open-source-software/</guid><pubDate>Mon, 17 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This blog post is about my thoughts on an article by Benjamin Mako Hill.
&lt;a href=&quot;https://mako.cc/writing/hill-when_free_software_isnt_better.html&quot;&gt;When Free Software Isn’t Better&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Benjamin Mako Hill, a board director for the Free Software Foundation, writes
that there is an issue with the philosophy of open source, at least in the open
source initiative’s mission statement.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Open source is a development method for software that harnesses the power of
distributed peer review and transparency of process. The promise of open
source is better quality, higher reliability, more flexibility, lower cost,
and an end to predatory vendor lock-in.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hill argues that the Open Source’s definition for software devalues Free
Software Projects. He argues that it has been shown that proprietary software
can exceed the quality of projects that would be considered open source or free
software. Hill also points out that many free software projects hosted online
have at most five contributors; again the open source initiative’s mission
statement gives one little reason to contribute to these kinds of projects.
Hill explains that the open source initiative’s mission statement suggests that
many free software projects with a small number of contributors have no
advantage over proprietary software. He then compares open source to free
software; that with free software advocates, these projects with few
contributors are still seen as a small success; that these projects begin with
an ethical advantage over any proprietary software.&lt;/p&gt;
&lt;p&gt;Hill closes his article by stating that the open source initiative should be
able to defend their mission statement that collaborative development resulting
from free software results in higher quality software. He also acknowledges
that there is no need to reject the arguments presented by the open source
initiative that collaborative development can result in higher quality
software.&lt;/p&gt;
&lt;p&gt;I believe that main idea that Hill wants us to take away from his article is
that the philosophy of the free software foundation is focused on the ethical
aspects of software to argue towards contributing to free software projects,
while the open source initiative argues that “open sourcing” your project will
lead to higher quality projects, which is not always the case.&lt;/p&gt;
&lt;p&gt;I give the article 0b100 out of 0b101. I would have liked to have known Hill’s
thoughts on combining the ideologies of open source and free software. While
the free software foundation focuses on ethics of free / open software, the
open source initiative focuses on the merits of free / open software.&lt;/p&gt;
&lt;p&gt;Some food for thought:&lt;/p&gt;
&lt;p&gt;Doesn’t a separation of idealogies cause a rift among developers, and actually
discourage collaboration / openness?&lt;/p&gt;
&lt;p&gt;Can’t the open source initiative and free software foundation combine their
efforts and idealogies?&lt;/p&gt;
&lt;p&gt;If it’s technically difficult to combine their efforts, isn’t that evidence of
my first question?&lt;/p&gt;
&lt;p&gt;If combining the efforts of both organizations resulted in one larger organization,
would that violate the ideal for decentralization?&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Software Licenses]]></title><description><![CDATA[You’ve probably seen some variation of these popular licenses: BSD (Original, Modified, Free) ISC MIT (Expat, X11) What’s the difference…]]></description><link>https://iclare.github.io/software-licenses/</link><guid isPermaLink="false">https://iclare.github.io/software-licenses/</guid><pubDate>Sat, 08 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;You’ve probably seen some variation of these popular licenses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BSD (Original, Modified, Free)&lt;/li&gt;
&lt;li&gt;ISC&lt;/li&gt;
&lt;li&gt;MIT (Expat, X11)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What’s the difference between them?&lt;/p&gt;
&lt;h1&gt;BSD&lt;/h1&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.gnu.org/licenses/license-list.html#OriginalBSD&quot;&gt;Original BSD license&lt;/a&gt;,
can be used as a permissive license that is similar to the MIT license but with
additional requirements regarding advertising and name reuse. The original BSD
license is also known as the “4-clause BSD license”. You should use the
&lt;a href=&quot;https://www.gnu.org/licenses/license-list.html#ModifiedBSD&quot;&gt;Modified (3-clause) BSD license&lt;/a&gt;
in place of this license for GPL compatibility.&lt;/p&gt;
&lt;p&gt;Unlike the Modified BSD license, the
&lt;a href=&quot;https://www.gnu.org/licenses/license-list.html#FreeBSD&quot;&gt;Free (2-clause) BSD license&lt;/a&gt;
,omits the non-endorsement clause, as well as adding a disclaimer about views
and opinions expressed in the software. This license is also known as the
Simplified BSD License.&lt;/p&gt;
&lt;h1&gt;ISC&lt;/h1&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.gnu.org/licenses/license-list.html#ISC&quot;&gt;ISC license&lt;/a&gt; is
another permissive license. This license is also known as the OpenBSD license.
Like Modified and Free BSD, it is compatible with GPL. This license is
equivalent to the MIT or Free BSD licenses in function, but omits some language
deemed unnecessary. Although brief, there are some issues with wording in this
license. To avoid issues with the wording in the future, it’s recommended to
use another license.&lt;/p&gt;
&lt;h1&gt;MIT&lt;/h1&gt;
&lt;p&gt;There are two licenses that are typically referred to as “the MIT license”.
These are the &lt;a href=&quot;https://www.gnu.org/licenses/license-list.html#Expat&quot;&gt;Expat license&lt;/a&gt;
and the &lt;a href=&quot;https://www.gnu.org/licenses/license-list.html#X11License&quot;&gt;X11 license&lt;/a&gt;.
The Expat license is a permissive, GPL compatible license. This license is
similar to the ISC license but worded to resolve ambiguities. Unlike the Expat
license, the X11 license forbids exploiting the names of copyright holders.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Programming is Forgetting]]></title><description><![CDATA[This is a second blog post on Allison Parrish’s talk Programming is Forgetting: A New Hacker Ethic In this second blog post I go into more…]]></description><link>https://iclare.github.io/programming-is-forgetting-part-2/</link><guid isPermaLink="false">https://iclare.github.io/programming-is-forgetting-part-2/</guid><pubDate>Wed, 05 Feb 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This is a second blog post on Allison Parrish’s talk &lt;a href=&quot;http://opentranscripts.org/transcript/programming-forgetting-new-hacker-ethic/&quot;&gt;Programming is Forgetting: A New Hacker Ethic&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this second blog post I go into more detail about Allison’s talk, including some
things I agree with, disagree with, and questions I believe are important to think about
after having watched the talk.&lt;/p&gt;
&lt;p&gt;The point Allison Parrish is trying to get across is that Levy’s Hacker Ethic,
while making sense at first, should be re-examined. That the problems with the Hacker Ethic
is not in its execution, but its underlying philosophy.&lt;/p&gt;
&lt;p&gt;Levy’s Hacker Ethic:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Access to computers should be unlimited and total
All information should be free
Mistrust authority—promote decentralization
Hackers should be judged by their hacking, not bogus criteria such as degrees, age, race or position
You can create art and beauty on a computer
Computers can change your life for the better&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My main issue with the talk is that she assumes that the source of hacker culture comes from or is heavily influenced by Levy’s Hacker Ethic. While It’s likely that the Hacker Ethic influenced hacker culture,&lt;/p&gt;
&lt;p&gt;I don’t believe that most programmers who consider them self a hacker (in the broadest sense possible) are
even aware of Levy’s Hacker Ethic in this day and age. I believe that people who consider them self a hacker in this day are simply people who are dedicated to bending computer software and hardware to their will and to their standards. Allison talks about hacker culture, but it is hard to even narrow down who belongs to the culture.&lt;/p&gt;
&lt;p&gt;In my opinion the Hacker Ethic is still valuable as is, so long as it is taken as a list of ideals to strive for, rather than a list of commandments.&lt;/p&gt;
&lt;p&gt;The new Hacker Ethic (Hacker Questions) Allison presents is certainly valuable if we are talking about
free and open source software. Though I believe it may be more fitting to call it Software Ethic Questions as
the term hacker now has such a wide range of use now.&lt;/p&gt;
&lt;p&gt;I give this talk a thumbs up.&lt;/p&gt;
&lt;p&gt;These are some questions I think are important to think about after watching this talk:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;How has the word Hacker changed in connotation over the years?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Has the word Hacker gone from meaning a passion for computers and a desire to share it with all to something else?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Why does Allison go into detail about technical subjects (like jpeg compression) to illustrate simple points?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Isn’t the assumption that your audience is technical going to turn people away? Wouldn’t that go against providing access and information? Is she unintentionally diluting her premise by sharing her passion?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How can we convince people to strive to address the Hacker Questions Allison gives as a new Hacker Ethic?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If one recognizes themself to have high morality and they are given the opportunity to lead an unethical software project (collecting personal information), would it be unethical to allow another individual of low morality to take the lead instead?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Programming is Forgetting]]></title><description><![CDATA[Allison Parish’s presentation at the Open Hardware Summit 2016
Programming is Forgetting: Toward a New Hacker Ethic I might disagree with…]]></description><link>https://iclare.github.io/programming-is-forgetting/</link><guid isPermaLink="false">https://iclare.github.io/programming-is-forgetting/</guid><pubDate>Fri, 31 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Allison Parish’s presentation at the Open Hardware Summit 2016
&lt;a href=&quot;http://opentranscripts.org/transcript/programming-forgetting-new-hacker-ethic/&quot;&gt;Programming is Forgetting: Toward a New Hacker Ethic&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I might disagree with the conclusion, but I did enjoy watching this talk. I do agree that the literal interpretation of the hacker ethic is flawed, but I do still think that
it is valuable. Although the hacker ethic came from Levy’s book, it does not have to define what the hacker ethic is.&lt;/p&gt;
&lt;p&gt;In my opinion there are better interpretations for the hacker ethic tenants from Levy’s book, and should be considered with a context.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Access to computers should be unlimited and total.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;While Allison points to ‘hackers’ as having denied Margaret Hamilton from access, I’d argue that this is a bad example of the hacker ethic as the denial of access was not intentional.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All information should be free.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don’t believe this should be interpreted literally. I believe we should strive to be open with information, but of course there is some information that simply cannot be shared such as personal information. It’s also important to consider that many jobs and economies rely on the fact that information can be treated as a commodity.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mistrust authority. Promote decentralization.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This I agree with for the most part. Decentralization should be the ideal when we can avoid compromise in another ideal such as access.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Hello World]]></title><description><![CDATA[This is my first post on my new blog / personal site! I set this blog up for a course I’m taking at RIT HFOSS. Setting up this blog was an…]]></description><link>https://iclare.github.io/hello-world/</link><guid isPermaLink="false">https://iclare.github.io/hello-world/</guid><pubDate>Wed, 22 Jan 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;This is my first post on my new blog / personal site!&lt;/p&gt;
&lt;p&gt;I set this blog up for a course I’m taking at RIT &lt;a href=&quot;https://github.com/ritjoe/hfoss&quot;&gt;HFOSS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Setting up this blog was an interesting process.&lt;/p&gt;
&lt;p&gt;I decided to create my blog using GitHub Pages as I’m familiar with GitHub. I also figured GitHub Pages
would work well enough for a simple static site.&lt;/p&gt;
&lt;p&gt;I wanted to have the option of changing the layout
and style of the blog in case I wanted to turn it into a personal site down the road. I also wanted to
customize the blog using React since I’m familiar with it. I ended up using &lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;Gatsby&lt;/a&gt;
as it allows you to write React to easily generate a static site.&lt;/p&gt;
&lt;p&gt;I was able to start writing this blog post within an hour of learning about Gatsby.
Unfortunately this does mean I have to keep a 386mb &lt;code class=&quot;language-text&quot;&gt;node_modules&lt;/code&gt; folder on my system if I want
to preview my posts before publishing them.&lt;/p&gt;</content:encoded></item></channel></rss>